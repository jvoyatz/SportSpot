[versions] # versions referenced by the plugins or libs

#app configuration
compileSdk = "33"
minSdk = "21"
targetSdk = "33"
versionCode = "1"
versionName = "1.0"
buildToolsVersion = "29.0.3"
androidTestInstrumentation = "androidx.test.runner.AndroidJUnitRunner"
packageName = "gr.jvoyatz.sportspot"

#android libraries versions
androidGradlePlugin = "7.4.1"
androidxCore = "1.9.0"
androidxAppcompat = "1.6.1"
androidMaterial = "1.5.0"
androidxLifecycle = "2.5.1"
androidxConstraint = "2.1.4"

#android -- test
androidxJunit = "1.1.5"
androidxEspresso = "3.5.1"

#android -- di
daggerHilt = "2.44"

#android -- room
room = "2.5.0"
#android -- navigation
androidxNavigation = "2.5.3"

#networking -- retrofit
okhttp = "4.10.0"
retrofit = "2.9.0"
moshi = "1.14.0"

#test
junit = "4.13.2"
truth = "1.1.3"

#coroutines
coroutines = "1.6.4"

#other
kotlin = "1.8.0"
timber = "5.0.1"
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

[plugins] # gradle plugins
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-jvm = {id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
java-library = { id = "java-library"}

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[libraries] # libraries--dependencies with versions

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-appcompat = { module = "androidx.appcompat:appcompat" , version.ref = "androidxAppcompat" }
androidx-material = { module = "com.google.android.material:material" , version.ref = "androidMaterial" }
androidx-constraint = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraint"}
#navigation
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation"}
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }
#lifecycler
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
#di
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "daggerHilt" }
javax-inject = { module = "javax.inject:javax.inject", version = "1" }

#okhttp
okhttp = {module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
#retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
#moshi
moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

#room
room = {module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

#unit testing
junit = { module = "junit:junit", version.ref = "junit"}
truth = { module = "com.google.truth:truth", version.ref = "truth" }

#instrumented testing
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxJunit"}
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso"}

# coroutines
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

#other
logging-timber = {module = "com.jakewharton.timber:timber", version.ref = "timber"}
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

[bundles] # combines multiple libraries
androidx-ui = ["androidx-appcompat", "androidx-material", "androidx-constraint"]
androidx-navigation = ["androidx-navigation-fragment", "androidx-navigation-ui"]
androidx-lifecycle = ["androidx-lifecycle-livedata", "androidx-lifecycle-viewmodel"]
testing-unit = ["junit", "truth", "coroutines-test"]
testing-instr = ["androidx-junit", "androidx-espresso-core"]
networking = ["okhttp", "okhttp-logging", "retrofit","retrofit-moshi", "moshi"]
room = ["room", "room-ktx"]
common-android = ["logging-timber", "androidx-core-ktx"]